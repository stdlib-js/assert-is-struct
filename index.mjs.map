{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport structFactory from '@stdlib/dstructs-struct';\n\n\n// VARIABLES //\n\n// Create a struct constructor which has an `isStruct` static method which we'll delegate to below:\nvar Struct = structFactory([\n\t{\n\t\t'name': 'v',\n\t\t'type': 'bool'\n\t}\n]);\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `struct` instance.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `struct` instance\n*\n* @example\n* import structFactory from '@stdlib/dstructs-struct';\n*\n* var schema = [\n*     {\n*         'name': 'foo',\n*         'type': 'float64'\n*     }\n* ];\n* var Struct = structFactory( schema );\n*\n* var bool = isStruct( new Struct() );\n* // returns true\n*\n* bool = isStruct( [] );\n* // returns false\n*/\nfunction isStruct( value ) {\n\treturn Struct.isStruct( value );\n}\n\n\n// EXPORTS //\n\nexport default isStruct;\n"],"names":["Struct","structFactory","name","type","isStruct","value"],"mappings":";;mFA4BA,IAAIA,EAASC,EAAc,CAC1B,CACCC,KAAQ,IACRC,KAAQ,UA8BV,SAASC,EAAUC,GAClB,OAAOL,EAAOI,SAAUC,EACzB"}